/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userinterface.Distributor;

import TheBusiness.Enterprise.Enterprise;
import TheBusiness.OrderManagement.OrderItem;
import TheBusiness.Organization.DistributorOrganization;
import TheBusiness.VaccineManagement.VaccineDetails;
import TheBusiness.WarehouseManagement.Warehouse;
import TheBusiness.WorkOrderQueue.OrderVaccineWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author soham
 */
public class VaccineStorage extends javax.swing.JPanel {

    private JPanel workContainer;
    private Enterprise enterprise;
    private DistributorOrganization distributorOrganization;
    private OrderVaccineWorkRequest request;
    
    public VaccineStorage(JPanel workContainer,Enterprise enterprise, DistributorOrganization distributorOrganization, OrderVaccineWorkRequest request) {
        initComponents();
        this.workContainer = workContainer;
        this.enterprise = enterprise;
        this.distributorOrganization = distributorOrganization;
        this.request = request;
        txtOrderNumber.setText(String.valueOf(request.getVaccineOrder().getOrderNumber()));
        populateTable();
        calculateTotalAmount();
        populateWarehouseComboBox();
        
    }
    
    private void populateTable() {

        DefaultTableModel defaulttabelmodel = (DefaultTableModel) tblorder.getModel();

        defaulttabelmodel.setRowCount(0);

        for (OrderItem orderItem : request.getVaccineOrder().getItemList()) {
            Object[] row = new Object[4];
            row[0] = orderItem.getVaccineDetails().getVaccineDefinition().getVaccineCode();
            row[1] = orderItem;
            row[2] = orderItem.getQuantity();
            row[3] = orderItem.getVaccineDetails().getVaccinePrice() * orderItem.getQuantity();

            defaulttabelmodel.addRow(row);
        }
    }
    
     private void calculateTotalAmount() {

        double totalAmount = 0;
        for (OrderItem orderItem : request.getVaccineOrder().getItemList()) {
            totalAmount = totalAmount + (orderItem.getVaccineDetails().getVaccinePrice() * orderItem.getQuantity());
        }

        txtTotalAmountOfOrder.setText(String.valueOf(totalAmount));
    }
     
     private void populateWarehouseComboBox(){
         bcwarelist.removeAllItems();
         
         for(Warehouse warehouse: distributorOrganization.getWarehouseDir().getWarehouseList())
         {
             bcwarelist.addItem(warehouse);
         }
         
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblTotalAmountOfOrder = new javax.swing.JLabel();
        txtTotalAmountOfOrder = new javax.swing.JTextField();
        btnStoreVaccine = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblParticulars = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblorder = new javax.swing.JTable();
        lblOrderNumber = new javax.swing.JLabel();
        txtOrderNumber = new javax.swing.JTextField();
        lblWarehouse = new javax.swing.JLabel();
        bcwarelist = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(70, 130, 180));

        lblTitle.setFont(new java.awt.Font("October Compressed Devanagari", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Store Vaccines");

        lblTotalAmountOfOrder.setFont(new java.awt.Font("October Compressed Devanagari", 0, 14)); // NOI18N
        lblTotalAmountOfOrder.setForeground(new java.awt.Color(255, 255, 255));
        lblTotalAmountOfOrder.setText("Total Amount of Order: ");

        txtTotalAmountOfOrder.setEnabled(false);

        btnStoreVaccine.setBackground(new java.awt.Color(0, 0, 0));
        btnStoreVaccine.setFont(new java.awt.Font("October Compressed Devanagari", 1, 18)); // NOI18N
        btnStoreVaccine.setForeground(new java.awt.Color(255, 255, 255));
        btnStoreVaccine.setText("Store Vaccine");
        btnStoreVaccine.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnStoreVaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStoreVaccineActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/ICONS/11122021icons/MicrosoftTeams-image (1).png"))); // NOI18N
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblParticulars.setFont(new java.awt.Font("October Compressed Devanagari", 1, 18)); // NOI18N
        lblParticulars.setForeground(new java.awt.Color(255, 255, 255));
        lblParticulars.setText("Particulars:");

        tblorder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Code", "Vaccine Name", "Quantity", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblorder.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblorder);

        lblOrderNumber.setFont(new java.awt.Font("October Compressed Devanagari", 0, 14)); // NOI18N
        lblOrderNumber.setForeground(new java.awt.Color(255, 255, 255));
        lblOrderNumber.setText("Order Number:");

        txtOrderNumber.setEnabled(false);

        lblWarehouse.setFont(new java.awt.Font("October Compressed Devanagari", 0, 14)); // NOI18N
        lblWarehouse.setForeground(new java.awt.Color(255, 255, 255));
        lblWarehouse.setText("Warehouse:");

        bcwarelist.setForeground(new java.awt.Color(0, 0, 102));
        bcwarelist.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/ICONS/11122021icons/store.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblParticulars)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTotalAmountOfOrder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotalAmountOfOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblWarehouse)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bcwarelist, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(332, 332, 332)
                                .addComponent(btnStoreVaccine, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBack)
                                    .addComponent(lblOrderNumber))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtOrderNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 83, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle)
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrderNumber)
                    .addComponent(txtOrderNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblParticulars)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalAmountOfOrder)
                    .addComponent(txtTotalAmountOfOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWarehouse)
                    .addComponent(bcwarelist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStoreVaccine))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnStoreVaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStoreVaccineActionPerformed
        // TODO add your handling code here:
         if(request.getStatus().equalsIgnoreCase("Stored")) {
            JOptionPane.showMessageDialog(null, "Order already Stored!");
            return;
        }
        
        int selectedRow = tblorder.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an Item from table");
            return;
        }
        OrderItem oi = (OrderItem)tblorder.getValueAt(selectedRow, 1);
        
        
        Warehouse warehouse = (Warehouse)bcwarelist.getSelectedItem();
        
        if(warehouse==null)
        {
            JOptionPane.showMessageDialog(null, "Warehouse not created");
            return;
        }
        
        VaccineDetails orderedVaccine = oi.getVaccineDetails();
        boolean flag = false;
        for(VaccineDetails product: warehouse.getVaccineInventoryList())
        {
            if(orderedVaccine.getBatchId().equals(product.getBatchId()) && orderedVaccine.getVaccineDefinition().getVaccineName().equals(product.getVaccineDefinition().getVaccineName()) && orderedVaccine.getManufacturerName().equalsIgnoreCase(product.getManufacturerName()))
            {   flag = true;
                product.setAvailablity(product.getAvailablity()+oi.getQuantity());
                break;
                
            }
            
        }

        if(flag == false)
        {
            VaccineDetails prod = warehouse.addNewVaccineProduct();
            prod.setAvailablity(oi.getQuantity());
            prod.setBatchId(oi.getVaccineDetails().getBatchId());
            prod.setManufactureDate(oi.getVaccineDetails().getManufactureDate());
            prod.setManufacturerName(oi.getVaccineDetails().getManufacturerName());
            prod.setVaccineDefinition(oi.getVaccineDetails().getVaccineDefinition());
            prod.setVaccineId(oi.getVaccineDetails().getVaccineId());
            prod.setVaccinePrice(oi.getVaccineDetails().getVaccinePrice());
            
            
       }
        
        request.setStatus("Stored");
       
         JOptionPane.showMessageDialog(null, "Vaccine Stored in the Warehouse!");
        
        


    }//GEN-LAST:event_btnStoreVaccineActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workContainer.remove(this);
        CardLayout layout = (CardLayout) workContainer.getLayout();
        layout.previous(workContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bcwarelist;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnStoreVaccine;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOrderNumber;
    private javax.swing.JLabel lblParticulars;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotalAmountOfOrder;
    private javax.swing.JLabel lblWarehouse;
    private javax.swing.JTable tblorder;
    private javax.swing.JTextField txtOrderNumber;
    private javax.swing.JTextField txtTotalAmountOfOrder;
    // End of variables declaration//GEN-END:variables
}
